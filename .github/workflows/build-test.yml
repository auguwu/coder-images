# üíêüíö coder-images: Optimized, and easy Docker images and Coder templates to use in your everyday work!
# Copyright (c) 2022-2023 Noel <cutie@floofy.dev>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Test Images
on:
    workflow_dispatch: {}
    push:
        branches:
            - master
        paths:
            - 'images/**'
jobs:
    test:
        name: Pipeline ${{matrix.images}} (cr.floofy.dev/coder/${{matrix.images}})
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                images: [base, bun, dotnet, golang, java, node, rust]
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Setup Buildx
              uses: docker/setup-buildx-action@v2

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v2

            - name: Build!
              uses: docker/build-push-action@v6
              with:
                platforms: linux/amd64,linux/arm64
                cache-from: type=gha,scope=${{matrix.images}}
                cache-to: type=gha,scope=${{matrix.images}}
                context: ./images/${{matrix.images}}
                file: ./images/${{matrix.images}}/Dockerfile
