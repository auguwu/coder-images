# üíêüíö coder-images: Optimized, and easy Docker images and Coder templates to use in your everyday work!
# Copyright (c) 2022-2023 Noel <cutie@floofy.dev>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Release Pipeline
on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  base-image:
    name: coder-images/base Pipeline [${{matrix.target}}]
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        target: [linux/amd64, linux/arm64/v8]
        runner: [ubuntu-latest, self-hosted]
        suffix: [amd64, arm64]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Grab version info
      uses: auguwu/git-tag-action@master
      id: tag
    - name: Setup Docker Buildx
      if: ${{ matrix.runner != 'self-hosted' }}
      uses: docker/setup-buildx-action@v2
    - name: Login into ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: auguwu
        password: ${{secrets.GITHUB_TOKEN}}
    - name: Build and push!
      uses: docker/build-push-action@v3
      if: ${{matrix.runner != 'self-hosted'}}
      with:
        platforms: ${{matrix.target}}
        context: images/base
        file: ./images/base/Dockerfile
        push: true
        tags: |
          ghcr.io/auguwu/coder-images/base:${{steps.tag.outputs.version}}-${{matrix.suffix}},
          ghcr.io/auguwu/coder-images/base:latest-${{matrix.suffix}}
    - name: Build and push! (old style)
      if: ${{matrix.runner == 'self-hosted'}}
      run: |
        docker build images/base -f ./images/base/Dockerfile -t ghcr.io/auguwu/coder-images/base:latest-${{matrix.suffix}} -t ghcr.io/auguwu/coder-images/base:${{steps.tag.outputs.version}}-${{matrix.suffix}} --platform ${{matrix.suffix}}
        docker push ghcr.io/auguwu/coder-images/base:latest-${{matrix.suffix}} ghcr.io/auguwu/coder-images/base:${{steps.tag.outputs.version}}-${{matrix.suffix}}
  base-manifests:
    name: Apply Docker Manifests [base]
    runs-on: ubuntu-latest
    needs: [base-image]
    steps:
    - name: Grab version info
      uses: auguwu/git-tag-action@master
      id: tag
    - name: Login into ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: auguwu
        password: ${{secrets.GITHUB_TOKEN}}
    - name: Apply manifests [:latest]
      uses: Noelware/docker-manifest-action@master
      with:
        base-image: ghcr.io/auguwu/coder-images/base:latest
        push: true
        extra-images: |
          ghcr.io/auguwu/coder-images/base:latest-arm64,
          ghcr.io/auguwu/coder-images/base:latest-amd64
    - name: Apply manifests [:${{steps.tag.outputs.version}}]
      uses: Noelware/docker-manifest-action@master
      with:
        base-image: ghcr.io/auguwu/coder-images/base:latest
        push: true
        extra-images: |
          ghcr.io/auguwu/coder-images/base:${{steps.tag.outputs.version}}-arm64,
          ghcr.io/auguwu/coder-images/base:${{steps.tag.outputs.version}}-amd64
  images:
    name: coder-images/${{matrix.image}} Pipeline [${{matrix.target}}]
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        target: [linux/amd64, linux/arm64/v8]
        runner: [ubuntu-latest, self-hosted]
        suffix: [amd64, arm64]
        image: [rust, node, java, golang]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Grab version info
      uses: auguwu/git-tag-action@master
      id: tag
    - name: Setup Docker Buildx
      if: ${{ matrix.runner != 'self-hosted' }}
      uses: docker/setup-buildx-action@v2
    - name: Login into ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: auguwu
        password: ${{secrets.GITHUB_TOKEN}}
    - name: Build and push!
      uses: docker/build-push-action@v3
      if: ${{matrix.runner != 'self-hosted'}}
      with:
        platforms: ${{matrix.target}}
        context: images/base
        file: ./images/base/Dockerfile
        push: true
        tags: |
          ghcr.io/auguwu/coder-images/${{matrix.image}}:${{steps.tag.outputs.version}}-${{matrix.suffix}},
          ghcr.io/auguwu/coder-images/${{matrix.image}}:latest-${{matrix.suffix}}
    - name: Build and push! (old style)
      if: ${{matrix.runner == 'self-hosted'}}
      run: |
        docker build images/base -f ./images/base/Dockerfile -t ghcr.io/auguwu/coder-images/${{matrix.image}}:latest-${{matrix.suffix}} -t ghcr.io/auguwu/coder-images/${{matrix.image}}:${{steps.tag.outputs.version}}-${{matrix.suffix}} --platform ${{matrix.suffix}}
        docker push ghcr.io/auguwu/coder-images/${{matrix.image}}:latest-${{matrix.suffix}} ghcr.io/auguwu/coder-images/${{matrix.image}}:${{steps.tag.outputs.version}}-${{matrix.suffix}}
  manifests:
    name: Apply Docker Manifests [${{matrix.image}}]
    runs-on: ubuntu-latest
    needs: [base-image]
    strategy:
      matrix:
        image: [rust, node, java, golang]
    steps:
    - name: Grab version info
      uses: auguwu/git-tag-action@master
      id: tag
    - name: Login into ghcr.io
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: auguwu
        password: ${{secrets.GITHUB_TOKEN}}
    - name: Apply manifests [:latest]
      uses: Noelware/docker-manifest-action@master
      with:
        base-image: ghcr.io/auguwu/coder-images/${{matrix.image}}:latest
        push: true
        extra-images: |
          ghcr.io/auguwu/coder-images/${{matrix.image}}:latest-arm64,
          ghcr.io/auguwu/coder-images/${{matrix.image}}:latest-amd64
    - name: Apply manifests [:${{steps.tag.outputs.version}}]
      uses: Noelware/docker-manifest-action@master
      with:
        base-image: ghcr.io/auguwu/coder-images/base:latest
        push: true
        extra-images: |
          ghcr.io/auguwu/coder-images/${{matrix.image}}:${{steps.tag.outputs.version}}-arm64,
          ghcr.io/auguwu/coder-images/${{matrix.image}}:${{steps.tag.outputs.version}}-amd64
